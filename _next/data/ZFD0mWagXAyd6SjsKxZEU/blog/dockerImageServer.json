{"pageProps":{"frontMatter":{"title":"dockerImageServer","subtitle":"Docker Image Server for Periodic Image Fetching with Nginx","type":"personal","description":"dockerImageServer is a lightweight Docker container that periodically downloads an image from a URL and serves it via Nginx. Ideal for use cases like exposing security camera snapshots through a reverse proxy.","keywords":"Docker, Nginx, image server, reverse proxy, security camera, docker container, open source, devops tools, docker compose, docker run, automation","github":"https://github.com/smp46/dockerImageServer","date":"2025-05-13","created":"2024-11-22","updated":"2025-05-13","readingTime":"2 min read","wordCount":222,"minutes":2},"mdxSource":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"dockerimageserver-docker-image-server-for-periodic-image-fetching-with-nginx\",\n      children: \"dockerImageServer: Docker Image Server for Periodic Image Fetching with Nginx\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This Docker container downloads an image from a specified URL at regular\\nintervals and serves it via an Nginx web server. I'm publishing it here in hope\\nthat someone else might have a use for it. My use case is fetching a snapshot\\nimage from a security camera on my local network and exposing it safely behind a\\nnginx web server that can then be put behind a reverse-proxy.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"prerequisites\",\n      children: \"Prerequisites\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Docker installed on your machine.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Basic knowledge of Docker command-line usage.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"configuration\",\n      children: \"Configuration\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Configuration is handled through environment variables. The following variables\\ncan be set:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"IMAGE_URL\"\n        }), \": The URL of the image to be downloaded and served. (Required)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"SLEEP_INTERVAL\"\n        }), \": The interval, in seconds, between each image fetch. Defaults\\nto \", _jsx(_components.code, {\n          children: \"5\"\n        }), \" seconds.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"quick-start\",\n      children: \"Quick Start\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Docker Run\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"docker\"\n          }), \" run \", _jsx(_components.span, {\n            className: \"token parameter variable\",\n            children: \"-d\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token parameter variable\",\n            children: \"-p\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"8080\"\n          }), \":80 \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"\\\\\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token parameter variable\",\n            children: \"-e\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token assign-left variable\",\n            children: \"IMAGE_URL\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"your_image_url_here \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"\\\\\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token parameter variable\",\n            children: \"-e\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token assign-left variable\",\n            children: \"SLEEP_INTERVAL\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"10\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"\\\\\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"  ghcr.io/smp46/dockerimageserver\\n\"\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Docker Compose\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-yaml\",\n      children: _jsxs(_components.code, {\n        className: \"language-yaml code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"dockerImageServer\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"container_name\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" dockerImageServer\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"ports\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \" 8080\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"80\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"image\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" ghcr.io/smp46/dockerimageserver\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"environment\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \" IMAGE_URL=your_image_url_here\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \" SLEEP_INTERVAL=10\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"restart\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" unless\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \"stopped\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This will start the container and begin serving the image at\\n\", _jsx(_components.a, {\n        href: \"http://localhost:8080\",\n        children: \"http://localhost:8080\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"build-from-source\",\n      children: \"Build from Source\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"Clone the Repository\"\n          })\n        }), \"\\n\", _jsx(_components.pre, {\n          className: \"language-bash\",\n          children: _jsxs(_components.code, {\n            className: \"language-bash code-highlight\",\n            children: [_jsxs(_components.span, {\n              className: \"code-line\",\n              children: [_jsx(_components.span, {\n                className: \"token function\",\n                children: \"git\"\n              }), \" clone https://github.com/smp46/dockerImageServer\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [_jsx(_components.span, {\n                className: \"token builtin class-name\",\n                children: \"cd\"\n              }), \" dockerImageServer\\n\"]\n            }), _jsx(_components.span, {\n              className: \"code-line\",\n              children: \"\\n\"\n            })]\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Build the Docker Image\"\n        }), \"\\n\", _jsx(_components.pre, {\n          className: \"language-bash\",\n          children: _jsxs(_components.code, {\n            className: \"language-bash code-highlight\",\n            children: [_jsxs(_components.span, {\n              className: \"code-line\",\n              children: [_jsx(_components.span, {\n                className: \"token function\",\n                children: \"docker\"\n              }), \" build \", _jsx(_components.span, {\n                className: \"token parameter variable\",\n                children: \"-t\"\n              }), \" dockerimageserver \", _jsx(_components.span, {\n                className: \"token builtin class-name\",\n                children: \".\"\n              }), \"\\n\"]\n            }), _jsx(_components.span, {\n              className: \"code-line\",\n              children: \"\\n\"\n            })]\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Run the Docker Container.\"\n        }), \"\\n\", _jsx(_components.p, {\n          children: \"Replace your_image_url_here with the actual URL of the image you want to\\nserve and optionally adjust the SLEEP_INTERVAL.\"\n        }), \"\\n\", _jsx(_components.pre, {\n          className: \"language-bash\",\n          children: _jsxs(_components.code, {\n            className: \"language-bash code-highlight\",\n            children: [_jsxs(_components.span, {\n              className: \"code-line\",\n              children: [_jsx(_components.span, {\n                className: \"token function\",\n                children: \"docker\"\n              }), \" run \", _jsx(_components.span, {\n                className: \"token parameter variable\",\n                children: \"-d\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token parameter variable\",\n                children: \"-p\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token number\",\n                children: \"8080\"\n              }), \":80 \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"\\\\\"\n              }), \"\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token parameter variable\",\n                children: \"-e\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token assign-left variable\",\n                children: \"IMAGE_URL\"\n              }), _jsx(_components.span, {\n                className: \"token operator\",\n                children: \"=\"\n              }), \"your_image_url_here \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"\\\\\"\n              }), \"\\n\"]\n            }), _jsxs(_components.span, {\n              className: \"code-line\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token parameter variable\",\n                children: \"-e\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token assign-left variable\",\n                children: \"SLEEP_INTERVAL\"\n              }), _jsx(_components.span, {\n                className: \"token operator\",\n                children: \"=\"\n              }), _jsx(_components.span, {\n                className: \"token number\",\n                children: \"10\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"\\\\\"\n              }), \"\\n\"]\n            }), _jsx(_components.span, {\n              className: \"code-line\",\n              children: \"  dockerimageserver\\n\"\n            })]\n          })\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This will start the container and begin serving the image at\\n\", _jsx(_components.a, {\n        href: \"http://localhost:8080\",\n        children: \"http://localhost:8080\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"dockerImageServer","subtitle":"Docker Image Server for Periodic Image Fetching with Nginx","type":"personal","description":"dockerImageServer is a lightweight Docker container that periodically downloads an image from a URL and serves it via Nginx. Ideal for use cases like exposing security camera snapshots through a reverse proxy.","keywords":"Docker, Nginx, image server, reverse proxy, security camera, docker container, open source, devops tools, docker compose, docker run, automation","github":"https://github.com/smp46/dockerImageServer","date":"2025-05-13","created":"2024-11-22","updated":"2025-05-13"}}},"__N_SSG":true}