name: Deploy Next.js Site to Pages

on:
  push:
    branches:
      - main
      - staging
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: 'pages-${{ github.ref }}'
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Disable Jekyll
        run: touch ./out/.nojekyll

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key:
            ${{ runner.os }}-nextjs-${{ github.ref_name }}-${{
            hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{
            hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ github.ref_name }}-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-      - name: Install dependencies

      - name: Install dependencies
        run:
          ${{ steps.detect-package-manager.outputs.manager }} ${{
          steps.detect-package-manager.outputs.command }}

      - name: Build with Next.js
        env:
          BASE_PATH:
            ${{ github.ref == 'refs/heads/staging' && '/staging' || '' }}
        run: |
          echo "Using BASE_PATH: $BASE_PATH"
          ${{ steps.detect-package-manager.outputs.manager }} run build

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: out
          target-folder:
            ${{ github.ref == 'refs/heads/staging' && 'staging' || '.' }}
          clean: true
